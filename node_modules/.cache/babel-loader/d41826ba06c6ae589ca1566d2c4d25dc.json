{"ast":null,"code":"var _jsxFileName = \"/Users/yennie/Desktop/yen-react/habit-tracker/src/app.jsx\";\nimport React, { Component } from \"react\";\nimport Habits from \"./components/habits\";\nimport NavBar from \"./components/navBar\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass app extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      habits: [{\n        id: 1,\n        name: \"Reading\",\n        count: 0\n      }, {\n        id: 2,\n        name: \"Running\",\n        count: 0\n      }, {\n        id: 3,\n        name: \"Coding\",\n        count: 0\n      }]\n    };\n\n    this.handleIncrement = habit => {\n      // const newHabit = [...this.state.habits];\n      // const index = newHabit.indexOf(habit);\n      // newHabit[index].count++;\n      // this.setState({ newHabit });\n      const habits = this.state.habits.map(item => {\n        if (item.id === habit.id) {\n          return { ...habit,\n            count: habit.count + 1\n          };\n        }\n\n        return item;\n      });\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleDecrement = habit => {\n      // const newHabit = [...this.state.habits];\n      // const index = newHabit.indexOf(habit);\n      // const count = newHabit[index].count - 1;\n      // newHabit[index].count = count < 0 ? 0 : count;\n      const habits = this.state.habits.map(item => {\n        if (item.id === habit.id) {\n          const count = habit.count - 1;\n          return { ...habit,\n            count: habit.count < 0 ? 0 : count\n          };\n        }\n\n        return item;\n      });\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleDelete = habit => {\n      const newHabit = this.state.habits.filter(item => item.id !== habit.id);\n      this.setState({\n        habits: newHabit\n      }); //객체의 키 이름과 변수명이 다르다!!!! habits를 필터링해서 가져오는것이기 때문에 객체의 키 이름은 habit임\n    };\n\n    this.handleAdd = name => {\n      const habits = [...this.state.habits, {\n        id: Date.now(),\n        name,\n        count: 0\n      }];\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleReset = () => {\n      const habits = this.state.habits.map(habit => {\n        return habit.count = 0;\n      });\n      this.setState(habits);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        totalCount: this.state.habits.filter(item => item.count > 0).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Habits, {\n        habits: this.state.habits,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        onDelete: this.handleDelete,\n        onAdd: this.handleAdd,\n        onReset: this.handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default app;","map":{"version":3,"names":["React","Component","Habits","NavBar","app","state","habits","id","name","count","handleIncrement","habit","map","item","setState","handleDecrement","handleDelete","newHabit","filter","handleAdd","Date","now","handleReset","render","length"],"sources":["/Users/yennie/Desktop/yen-react/habit-tracker/src/app.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport Habits from \"./components/habits\";\nimport NavBar from \"./components/navBar\";\n\nimport \"./app.css\";\n\nclass app extends Component {\n  state = {\n    habits: [\n      { id: 1, name: \"Reading\", count: 0 },\n      { id: 2, name: \"Running\", count: 0 },\n      { id: 3, name: \"Coding\", count: 0 },\n    ],\n  };\n  handleIncrement = (habit) => {\n    // const newHabit = [...this.state.habits];\n    // const index = newHabit.indexOf(habit);\n    // newHabit[index].count++;\n    // this.setState({ newHabit });\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDecrement = (habit) => {\n    // const newHabit = [...this.state.habits];\n    // const index = newHabit.indexOf(habit);\n    // const count = newHabit[index].count - 1;\n    // newHabit[index].count = count < 0 ? 0 : count;\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: habit.count < 0 ? 0 : count };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDelete = (habit) => {\n    const newHabit = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits: newHabit }); //객체의 키 이름과 변수명이 다르다!!!! habits를 필터링해서 가져오는것이기 때문에 객체의 키 이름은 habit임\n  };\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map((habit) => {\n      return (habit.count = 0);\n    });\n    this.setState(habits);\n  };\n  render() {\n    return (\n      <>\n        <NavBar\n          totalCount={this.state.habits.filter((item) => item.count > 0).length}\n        />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\nexport default app;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}